allprojects {
    repositories {
        mavenCentral()                     // main maven repo
        jcenter()                          // JDA and some other stuff
        maven { url 'https://dl.bintray.com/napster/SqlSauce' }
        maven { url 'https://dl.bintray.com/palantir/releases' }
        mavenLocal()                       // useful for developing
        maven { url "https://jitpack.io" } // build projects directly from github
    }

    apply plugin: 'idea'
    group = 'com.fredboat.backend'
}

subprojects {
    buildscript {
        ext {
            //@formatter:off

            //plugin versions
            gradleGitVersion        = '1.4.21'
            springBootVersion       = '2.0.3.RELEASE'
            sonarqubeVersion        = '2.6.2'

            //@formatter:on
        }
        repositories {
            maven { url "https://plugins.gradle.org/m2/" }
            maven { url 'http://repo.spring.io/plugins-release' }
            mavenCentral()
        }
        dependencies {
            classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitVersion}"
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}"
        }
    }
    apply plugin: 'java'

    sourceCompatibility = 10
    targetCompatibility = 10

    compileJava.dependsOn 'clean'
    compileJava.options.encoding = 'UTF-8'
    compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    ext {
        //@formatter:off
        fredBoatRootVersion         = '0392c55abf2d4238ddb1221d082bed698149a1b0'
        springBootVersion           = "${springBootVersion}"

        sqlsauceVersion             = '0.2.3'
        hibernateVersion            = '5.2.17.Final'
        flywayVersion               = '5.1.4'
        dsProxyVersion              = '1.4.9'
        jaxbApiVersion              = '2.3.0'
        springfoxVersion            = '2.8.0'
        fastUtilVersion             = '8.1.1'

        jUnitVersion                = '5.2.0'
        apiGuardianVersion          = '1.0.0'
        springSecurityTestVersion   = '5.0.4.RELEASE'
        dockerComposeRuleVersion    = '0.33.0'
        //@formatter:on
    }
}

version = '1.0'
ext {
    moduleName = 'Backend'
}

wrapper {
    gradleVersion = '4.8.1'
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}

//create a simple version file that we will be reading to create appropriate docker tags
void versionTxt() {
    new File("$projectDir/VERSION.txt").text = "$rootProject.version\n"
}

versionTxt()
